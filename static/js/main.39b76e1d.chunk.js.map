{"version":3,"sources":["components/InputBlock/InputBlock.module.scss","components/Counter/CounterInput/CounterInput.module.scss","components/Counter/Counter.module.scss","components/Counter/CounterButton/CounterButton.module.scss","components/Counter/CounterInput/CounterInput.tsx","components/Counter/CounterButton/CounterButton.tsx","store/store.ts","components/Counter/Counter.tsx","components/InputBlock/InputBlock.tsx","App.tsx","index.tsx"],"names":["module","exports","CounterInput","count","className","classes","input","error","CounterButton","changes","disabled","title","onClick","btn","store","_state","maxValue","startValue","_render","rerender","getState","this","subscribe","callback","dispatch","action","type","newCount","Counter","local","counter","btns","resetCountAC","InputBlock","props","inputBlockWrap","inputArea","inputItem","inputTitle","alert","Input","dec","placeholder","inc","App","state","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,UAAY,8BAA8B,UAAY,8BAA8B,WAAa,+BAA+B,MAAQ,0BAA0B,IAAM,wBAAwB,IAAM,wBAAwB,IAAM,0B,kBCA1SD,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,MAAQ,8B,gBCA9DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,wB,iBCA5DD,EAAOC,QAAU,CAAC,IAAM,6B,+LCgBTC,EATuC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEpD,OACI,qBAAKC,UAAS,UAAKC,IAAQC,MAAb,YAAgC,IAAVH,EAAcE,IAAQE,MAAQ,IAAlE,SACKJ,K,gBCSEK,EAXyC,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAEzE,OACI,wBAAQC,QAASH,EACTL,UAAWC,IAAQQ,IACnBH,SAAUA,EAFlB,SAGKC,K,gBCeAG,EAAmB,CAC5BC,OAAQ,CACJC,SAAU,EACVC,WAAY,EACZd,MAAO,GAEXe,QAN4B,WAOxBC,KAEJC,SAT4B,WAUxB,OAAOC,KAAKN,QAEhBO,UAZ4B,SAYlBC,GACNF,KAAKH,QAAUK,GAEnBC,SAf4B,SAenBC,GACe,iBAAhBA,EAAOC,MACPL,KAAKN,OAAOZ,MAAQsB,EAAOE,SAAW,EACtCN,KAAKH,WACkB,gBAAhBO,EAAOC,OACVL,KAAKN,OAAOZ,MAAQ,IACpBkB,KAAKN,OAAOZ,MAAQ,GAExBkB,KAAKH,aCfFU,EA3B6B,SAAC,GAAuB,IAAtBJ,EAAqB,EAArBA,SAAUrB,EAAW,EAAXA,MAUpD,OACI,0BAASC,UAAWyB,IAAMC,QAA1B,UACI,cAAC,EAAD,CAAc3B,MAAOA,IACrB,sBAAKC,UAAWyB,IAAME,KAAtB,UACI,cAAC,EAAD,CAAetB,QAZP,WAChBe,ED8CG,CACHE,KAAM,eACNC,SChDuBxB,KAYAQ,MAAM,MACND,SAAUP,GAAS,IAElC,cAAC,EAAD,CAAeQ,MAAM,QACNF,QAbR,WACfe,EDgDoB,SAACrB,GACzB,MAAO,CACHuB,KAAM,cACNvB,MAAOA,GCnDE6B,CAAa7B,KAaCO,SAAoB,IAAVP,W,gBCrB5B8B,EAAa,SAACC,GAMvB,OACI,0BAAS9B,UAAWyB,IAAMM,eAA1B,UACI,sBAAK/B,UAAWyB,IAAMO,UAAtB,UACI,sBAAKhC,UAAWyB,IAAMQ,UAAtB,UACI,qBAAKjC,UAAWyB,IAAMS,WAAtB,uBAGA,cAAC,EAAD,OAEJ,sBAAKlC,UAAWyB,IAAMQ,UAAtB,UACI,qBAAKjC,UAAWyB,IAAMS,WAAtB,yBAGA,cAAC,EAAD,UAGR,qBAAKlC,UAAWyB,IAAMhB,IAAtB,SACI,cAAC,EAAD,CAAeJ,QArBN,WACjB8B,MAAO,WAqBgB5B,MAAM,cAM/B6B,EAAQ,WACV,OACI,sBAAKpC,UAAWyB,IAAMvB,MAAtB,UACI,qBAAKF,UAAWyB,IAAMY,IAAtB,eACA,uBAAOf,KAAK,OACLgB,YAAY,qBAEnB,qBAAKtC,UAAWyB,IAAMc,IAAtB,mBCtBGC,MAhBf,SAAaV,GAET,IAAMW,EAAQX,EAAMpB,MAAMM,WAE1B,OACI,sBAAKhB,UAAU,MAAf,UACI,cAAC,EAAD,CACYoB,SAAUU,EAAMpB,MAAMU,SAASsB,KAAKZ,EAAMpB,SAEtD,cAAC,EAAD,CAASX,MAAO0C,EAAM1C,MACbqB,SAAUU,EAAMpB,MAAMU,SAASsB,KAAKZ,EAAMpB,aCdlDK,EAAW,WACpB4B,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,CAAKnC,MAAOA,MAEhBoC,SAASC,eAAe,UAIhCrC,EAAMQ,UAAUH,GAChBA,M","file":"static/js/main.39b76e1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlockWrap\":\"InputBlock_inputBlockWrap__2EfyV\",\"inputArea\":\"InputBlock_inputArea__WHmaP\",\"inputItem\":\"InputBlock_inputItem__1-4Fp\",\"inputTitle\":\"InputBlock_inputTitle__3-ks1\",\"input\":\"InputBlock_input__1OXzP\",\"dec\":\"InputBlock_dec__16v71\",\"inc\":\"InputBlock_inc__2DqY0\",\"btn\":\"InputBlock_btn__m-rAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"CounterInput_input__1_aK2\",\"error\":\"CounterInput_error__wjSrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__TPySr\",\"btns\":\"Counter_btns__2z-pP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"CounterButton_btn__k13wD\"};","import React from 'react'\r\nimport classes from './CounterInput.module.scss'\r\n\r\nexport type CounterInputPropsType = {\r\n    count: number\r\n}\r\n\r\n\r\nconst CounterInput: React.FC<CounterInputPropsType> = ({count}) => {\r\n\r\n    return (\r\n        <div className={`${classes.input} ${count === 5 ? classes.error : \"\"}`}>\r\n            {count}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterInput","import React from 'react'\r\nimport classes from './CounterButton.module.scss'\r\n\r\nexport type CounterButtonPropsType = {\r\n    disabled?: boolean\r\n    changes: () => void\r\n    title: string\r\n}\r\n\r\n\r\nconst CounterButton: React.FC<CounterButtonPropsType> = ({changes, disabled, title}) => {\r\n\r\n    return (\r\n        <button onClick={changes}\r\n                className={classes.btn}\r\n                disabled={disabled}>\r\n            {title}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CounterButton","import {rerender} from '../index';\r\n\r\n// === STATE TYPES ===\r\nexport type StateType = {\r\n    maxValue: number\r\n    startValue: number\r\n    count: number\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    _render: () => void\r\n    getState: () => StateType\r\n    subscribe: ( callback: () => void) => void\r\n    dispatch: (action: ChangeCountActionType | ResetCountActionType) => void\r\n}\r\n\r\n// === / STATE TYPES ===\r\n\r\n// === ACTION TYPES ===\r\nexport type ChangeCountActionType = {\r\n    type: \"CHANGE-COUNT\"\r\n    newCount: number\r\n}\r\n\r\nexport type ResetCountActionType = {\r\n    type: \"RESET-COUNT\",\r\n    count: number\r\n}\r\n// === / ACTION TYPES ===\r\n\r\nexport const store: StoreType = {\r\n    _state: {\r\n        maxValue: 0,\r\n        startValue: 0,\r\n        count: 0\r\n    },\r\n    _render() {\r\n        rerender();\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(callback) {\r\n        this._render = callback\r\n    },\r\n    dispatch(action) {\r\n        if (action.type === \"CHANGE-COUNT\") {\r\n            this._state.count = action.newCount + 1\r\n            this._render()\r\n        } else if (action.type === \"RESET-COUNT\") {\r\n            if (this._state.count > 0) {\r\n                this._state.count = 0\r\n            }\r\n            this._render()\r\n        }\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const changeCountAC = (newCount: number): ChangeCountActionType => {\r\n    return {\r\n        type: \"CHANGE-COUNT\",\r\n        newCount: newCount\r\n    }\r\n}\r\n\r\nexport const resetCountAC = (count: number): ResetCountActionType => {\r\n    return {\r\n        type: \"RESET-COUNT\",\r\n        count: count\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===\r\n","import React from 'react'\r\nimport CounterInput from './CounterInput/CounterInput';\r\nimport CounterButton from './CounterButton/CounterButton';\r\nimport local from './Counter.module.scss'\r\nimport {changeCountAC, ChangeCountActionType, resetCountAC, ResetCountActionType} from '../../store/store';\r\n\r\nexport type CounterPropsType = {\r\n    count: number\r\n    dispatch: (action: ChangeCountActionType | ResetCountActionType) => void\r\n}\r\n\r\n\r\nconst Counter: React.FC<CounterPropsType> = ({dispatch, count}) => {\r\n\r\n    const addNewCount = () => {\r\n        dispatch(changeCountAC(count))\r\n    }\r\n\r\n    const resetCount = () => {\r\n        dispatch(resetCountAC(count))\r\n    }\r\n\r\n    return (\r\n        <section className={local.counter}>\r\n            <CounterInput count={count}/>\r\n            <div className={local.btns}>\r\n                <CounterButton changes={addNewCount}\r\n                               title=\"inc\"\r\n                               disabled={count >= 5}\r\n                />\r\n                <CounterButton title=\"reset\"\r\n                               changes={resetCount}\r\n                               disabled={count === 0}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Counter","import local from './InputBlock.module.scss';\r\nimport React from 'react';\r\nimport CounterButton from '../Counter/CounterButton/CounterButton';\r\nimport {ChangeCountActionType, ResetCountActionType} from '../../store/store';\r\n\r\ntype InputBlockPropsType = {\r\n    disabled?: boolean\r\n    dispatch: (action: ChangeCountActionType | ResetCountActionType) => void\r\n    // count: number\r\n}\r\n\r\nexport const InputBlock = (props: InputBlockPropsType) => {\r\n\r\n    const alertMessage = () => {\r\n        alert (\"hello!\")\r\n    }\r\n\r\n    return (\r\n        <section className={local.inputBlockWrap}>\r\n            <div className={local.inputArea}>\r\n                <div className={local.inputItem}>\r\n                    <div className={local.inputTitle}>\r\n                        max value\r\n                    </div>\r\n                    <Input/>\r\n                </div>\r\n                <div className={local.inputItem}>\r\n                    <div className={local.inputTitle}>\r\n                        start value\r\n                    </div>\r\n                    <Input />\r\n                </div>\r\n            </div>\r\n            <div className={local.btn}>\r\n                <CounterButton changes={alertMessage}\r\n                               title=\"set\"/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst Input = () => {\r\n    return (\r\n        <div className={local.input}>\r\n            <div className={local.dec}>-</div>\r\n            <input type=\"text\"\r\n                   placeholder=\"Enter your value\"\r\n            />\r\n            <div className={local.inc}>+</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Counter from './components/Counter/Counter';\r\nimport {InputBlock} from './components/InputBlock/InputBlock';\r\nimport {StoreType} from './store/store';\r\n\r\ntype AppPropsType = {\r\n    store: StoreType\r\n}\r\n\r\nfunction App(props: AppPropsType) {\r\n\r\n    const state = props.store.getState();\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <InputBlock //count={state.count}\r\n                        dispatch={props.store.dispatch.bind(props.store)}\r\n            />\r\n            <Counter count={state.count}\r\n                     dispatch={props.store.dispatch.bind(props.store)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {store} from './store/store';\r\n\r\nexport const rerender = () => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App store={store} />\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nstore.subscribe(rerender)\r\nrerender()\r\n"],"sourceRoot":""}